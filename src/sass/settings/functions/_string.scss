// Fetches nested keys
@function str-explode($string, $delimiter: '') {
  @if type-of($string) != 'string' {
    @error '`explode` function expecting a string; #{type-of($string)} given.';
  }

  @if type-of($delimiter) != 'string' {
    @error '`explode` function expecting a string; #{type-of($delimiter)} given.';
  }

  $result: ();
  $length: str-length($string);

  @if str-length($delimiter) == 0 {
    @for $i from 1 through $length {
      $result: append($result, str-slice($string, $i, $i));
    }

    @return $result;
  }

  $running: true;
  $remaining: $string;

  @while $running {
    $index: str-index($remaining, $delimiter);

    @if $index {
      $slice: str-slice($remaining, 1, $index - 1);
      $result: append($result, $slice);
      $remaining: str-slice($remaining, $index + str-length($delimiter));
    } @else {
      $running: false;
    }
  }

  @return append($result, $remaining);
}
//get map in a dot notation way
@function property($props, $map: $slots-theme) {
  $props-list: str-explode($props, $delimiter: '.');

  @if length($props-list) > 1 {
    @return map-get-deep($map, $props-list);

  } @else {
    @return map-get($map, nth($props, 1));

  }
}
